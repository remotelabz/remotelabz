{% extends 'dashboard.base.html.twig' %}

{% block breadcrumbs %}
    {%- set breadcrumbs = breadcrumbs|merge({ 'Instances': path('instances') }) -%}
    {{ parent() }}
{% endblock %}

{% block sidebar %}
    {% set category = 'instances' %}
    {{ parent() }}
{% endblock %}

{# {% set filter = filter|default('all') %}
{% if filter not in ['all', 'labs'] %}{% set filter = 'all' %}{% endif %}#}

{% block wrapper %}
    <div class="top-panel">
            <div class="quick-actions">
                {% if is_granted('ROLE_ADMINISTRATOR') %}
                {% endif %}
            </div>
            <input type="hidden" id="instance_page" value={{page}}/>
    </div>
     {#<div class="search-panel">
        <form action="{{ path('instances') }}" method="GET">
            <input type="search" class="form-control input-sm" name="search"
            placeholder="Search by name"
            spellcheck="false" value="{{ search|default('') }}" type="search">
        </form>
        
    </div> #}
    <div class="labs-panel">
   {# {% if filter == "all" or filter == "labs" %}
        {#- Lab instances -#}
        <h4 class="p-3 border-bottom">Lab instances
        <span data-toggle="tooltip" data-placement="right" title="All laboratories started by you, your groups and members of your groups.">
            {{ svg('question') }} </span></h4>
            {% if is_granted('ROLE_ADMINISTRATOR') or is_granted('ROLE_TEACHER')%}
            <div>
                {{ form_start(addFilterForm, {"action": path('instances'), "method":"GET"}) }}
                 
                <div class="d-flex align-items-center mb-2">
                    <select name="{{ field_name(addFilterForm.filter) }}" id="instance_filter" class="mr-3 instancesFilter form-control"> 

                    {% for label, value in field_choices(addFilterForm.filter) %}
                        <option {% if value == field_value(addFilterForm.filter) %}selected="selected"{% endif %} value="{{ value }}">{{ label }}</option>
                    {% endfor %}
                    </select>
                    <select name="{{ field_name(addFilterForm.subFilter) }}" id="instance_subFilter" class="mr-3 subFilter form-control"> 

                        {% for label, value in field_choices(addFilterForm.subFilter) %}
                            <option {% if value == field_value(addFilterForm.subFilter) %}selected="selected"{% endif %} value="{{ value }}">{{ label }}</option>
                        {% endfor %}
                    </select>

                    <button id="instance_submit" class="btn-success btn" type="submit" name="{{ field_name(addFilterForm.submit) }}">{{ field_label(addFilterForm.submit) }}</button>
                </div>
                {{ form_end(addFilterForm) }}
            </div>
        {% else %}
            <div>
            <input type="hidden" id="instance_filter" value="none"/>
            <input type="hidden" id="instance_subFilter" value="allInstances"/>
            </div>
        {% endif %}
        {% if labInstances is empty %}
        <div class="wrapper align-items-center p-3 border-bottom lab-item">
            <span class="lab-item-name">
                None
            </span>
        </div>
        {% else %}
        <div class="col">{{ react_component('AllInstancesList', {"props": props})}}</div>
        {% endif %}
        {#{% for element in labInstances %}
        {{dump(element.instance.id)}}
        #}
            
        {#TODO: #666 Create a component for this element to manage all the instance in React and avoid to refresh the page when we have to delete an instance or to detect a new instance  
        <div class="wrapper align-items-center p-3 {% if not loop.last %}border-bottom{% endif %} lab-item">#}
            {# <div class="float-right">
                {% if not instance.state == 'started' %}
                <a href="{{ path('start_lab', {'id': instance.lab.id}) }}" class="btn btn-success" role="button" title="Start lab" data-toggle="tooltip" data-placement="top">
                        {{ svg('play') }}
                </a>
                <a href="{{ path('delete_instance', {'id': instance.id, 'type': 'lab'}) }}" class="btn btn-danger" role="button" title="Delete instance" data-toggle="tooltip" data-placement="top">
                        {{ svg('close') }}
                </a>
                {% else %}
                <a href="{{ path('stop_lab', {'id': instance.lab.id}) }}" class="btn btn-danger" role="button" title="Stop lab" data-toggle="tooltip" data-placement="top">
                    {{ svg('stop') }}
                </a>
                {% endif %}
            </div> 

            <div>
                <div>
                     <a href="{{- path('show_lab', {'id': element.instance.id}) -}}" class="lab-item-name" title="{{ element.instance.lab.name }}" data-toggle="tooltip" data-placement="top">
                    </a>
                    Lab&nbsp; {{- element.instance.lab.name -}}&nbsp;started by
                    {% if not element is null %}#}
                    {# In some cases, one instance can stay up but it is empty. It's an issue to solve
                        {% if element.instance.isOwnedByUser() %}
                            user {{ element.instance.user.name }}
                        {% else %}
                            group {{ element.instance.group.name }}
                        {% endif %}
                    {% endif %}<br/> #}
                    {# UUID:&nbsp; {{- element.instance.uuid -}} 
                </div>#}
                {# <span>
                    {% if instance.isStarted %}
                        <label class="badge badge-success">Started</label>
                    {% elseif instance.deviceInstances|length > 0 %}
                        <label class="badge badge-warning">Partially started</label>
                    {% else %}
                        <label class="badge badge-danger">Not started</label>
                    {% endif %}
                </span> #}
                
                {#<div class="col">{{ react_component('AllInstancesManager', {'props': element.props}) }}</div>
            </div>
        </div>
        {% endfor %}
        <div class="col">{{ react_component('AllInstancesList', {'props': labInstances}) }}</div>
    {% endif %}#}

    {# {% if filter == "all" or filter == "devices" %}
        

        <h4 class="p-3 border-bottom">Device instances</h4>
        {% if deviceInstances is empty %}
        <div class="wrapper align-items-center p-3 border-bottom lab-item">
            <span class="lab-item-name">
                None
            </span>
        </div>
        {% endif %}
        {% for instance in deviceInstances %}
        <div class="wrapper align-items-center p-3 {% if not loop.last %}border-bottom{% endif %} lab-item">
            <div>
                <div>
                    <a href="{{- path('show_device', {'id': instance.device.id}) -}}" class="lab-item-name">
                        {{- instance.uuid -}}
                    </a>
                </div>
                <span>
                    {% if instance.isStarted %}
                        <label class="badge badge-success">Started</label>
                       
                    {% else %}
                        <label class="badge badge-danger">Not started</label>
                    {% endif %}
                </span>
                <p class="text-muted d-inline">
                    ·
                    {% if instance.isOwnedByUser() %}
                        Owned by user {{ instance.user.name }}
                    {% else %}
                        Owner by group {{ instance.group.name }}
                    {% endif %}
                </p>
            </div>
        </div>
        {% endfor %}
    {% endif %}

    {% if filter == "all" or filter == "networkInterfaces" %}
        

        <h4 class="p-3 border-bottom">Network interface instances</h4>
        {% if networkInterfaceInstances is empty %}
        <div class="wrapper align-items-center p-3 border-bottom lab-item">
            <span class="lab-item-name">
                None
            </span>
        </div>
        {% endif %}
        {% for instance in networkInterfaceInstances %}
        <div class="wrapper align-items-center p-3 {% if not loop.last %}border-bottom{% endif %} lab-item">
            <div>
                <div>
                    <a href="{{- path('network_interfaces', {'id': instance.networkInterface.id}) -}}" class="lab-item-name">
                        {{- instance.uuid -}}
                    </a>
                </div>
                <p class="text-muted d-inline">
                    {% if instance.isOwnedByUser() %}
                        Owned by user {{ instance.user.name }}
                    {% else %}
                        Owner by group {{ instance.group.name }}
                    {% endif %}
                    ·
                    Port : <kbd>{{ instance.remotePort }}</kbd>
                </p>
            </div>
        </div>
        {% endfor %}
    {% endif %}
    #}
    </div>
    {% set pagesNumber = count > limit ? count // limit + 1 : 1 %}
    <nav aria-label="Page navigation example">
        <ul class="pagination mt-3 justify-content-center">
            <li class="page-item {% if page <= 1 %}disabled{%endif%}">
                <a class="page-link" href="{{ path('instances', app.request.query|merge({page: page-1})) }}">Previous</a>
            </li>
            {% for i in 1.. pagesNumber %}
                <li class="page-item {% if i == page %}active{%endif%}"><a class="page-link" href="{{ path('instances', app.request.query|merge({page: i})) }}">{{ i }}</a></li>
            {% endfor %}
            <li class="page-item {% if page >= pagesNumber %}disabled{%endif%}">
                <a class="page-link" href="{{ path('instances', app.request.query|merge({page: page+1})) }}">Next</a>
            </li>
        </ul>
    </nav>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>
    <script>
        const filterSelector = document.getElementById('instance_filter');
        
    console.log(filterSelector.type);
        if (filterSelector.type != "hidden") {
            $('#instance_subFilter').select2({
            theme: "bootstrap-5",
        });
            filterSelector.addEventListener('change', ()=> {
                $.ajax({
                    url: "{{ path('api_list_instances_filter') }}",
                    type: "GET",
                    dataType: "JSON",
                    data: {
                        filter: filterSelector.value
                    },
                    success: function (choices) {
                        const subFilterSelect = document.getElementById('instance_subFilter');

                        subFilterSelect.innerHTML = '';

                        for(let choice of choices){
                            subFilterSelect.innerHTML += '<option value="' + choice.uuid + '">' + choice.name + '</option>';
                        }

                        $('#instance_subFilter').select2({
                            theme: "bootstrap-5",
                        });
                    },
                    error: function (err) {
                        console.log(err.response);
                    }
                });
            })
        }
        
    </script>
{% endblock %}